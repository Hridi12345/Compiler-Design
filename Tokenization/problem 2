#include <iostream>
#include <fstream>
#include <string>
using namespace std;

string keywords[] = {"int", "float", "double", "char", "if", "else", "while", "for", "return", "void"};
int keywordCount = sizeof(keywords) / sizeof(keywords[0]);


bool isKeyword(string token) {
    for (int i = 0; i < keywordCount; i++) {
        if (token == keywords[i]) return true;
    }
    return false;
}


bool isInteger(string token) {
    if (token.size() == 0) return false;
    int start = (token[0] == '-') ? 1 : 0;
    for (int i = start; i < token.size(); i++) {
        if (token[i] < '0' || token[i] > '9') return false;
    }
    return true;
}


bool isRealNumber(string token) {
    if (token.size() == 0) return false;
    int start = (token[0] == '-') ? 1 : 0;
    int dotCount = 0;
    for (int i = start; i < token.size(); i++) {
        if (token[i] == '.') dotCount++;
        else if (token[i] < '0' || token[i] > '9') return false;
    }
    return (dotCount == 1);
}

bool isIdentifier(string token) {
    if (token.size() == 0) return false;
    if (!((token[0] >= 'a' && token[0] <= 'z') || (token[0] >= 'A' && token[0] <= 'Z') || token[0] == '_'))
        return false;
    for (int i = 1; i < token.size(); i++) {
        char c = token[i];
        if (!((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || c == '_'))
            return false;
    }
    return true;
}


bool isOperator(char ch) {
    char ops[] = {'+', '-', '*', '/', '=', '<', '>', '!'};
    for (int i = 0; i < 8; i++) if (ch == ops[i]) return true;
    return false;
}


bool isPunctuation(char ch) {
    char punct[] = {';', ',', '(', ')', '{', '}', '[', ']'};
    for (int i = 0; i < 8; i++) if (ch == punct[i]) return true;
    return false;
}


void printCategory(string token) {
    if (isKeyword(token)) cout << "keyword(" << token << ") ";
    else if (isInteger(token)) cout << "integer(" << token << ") ";
    else if (isRealNumber(token)) cout << "real_number(" << token << ") ";
    else if (isIdentifier(token)) cout << "identifier(" << token << ") ";
    else cout << "unknown(" << token << ") ";
}

int main() {
    ifstream file("tokens.txt");
    if (!file) {
        cout << "Error opening file!" << endl;
        return 1;
    }

    //string line;
    cout << "Contents of tokens.txt:"<<endl;
        // cout << "File Contents -----\n";
    string tempLine;
    while (getline(file, tempLine)) {
        cout << tempLine << endl;
    }

    file.clear();
    file.seekg(0);

    string line;
    int lineNo = 1;

    while (getline(file, line)) {
        //cout << "Line " << lineNo++ << ": ";
        string token = "";

        for (int i = 0; i < line.size(); i++) {
            char ch = line[i];


            if (ch == ' ' || ch == '\t') {
                if (token != "") { printCategory(token); token = ""; }
                cout << "delimiter ";
            }

            else if (isOperator(ch)) {
                if (token != "") { printCategory(token); token = ""; }
                cout << "operator(" << ch << ") ";
            }
            else if (isPunctuation(ch)) {
                if (token != "") { printCategory(token); token = ""; }
                cout << "punctuation(" << ch << ") ";
            }
            else {
                token += ch;
            }
        }


        if (token != "") printCategory(token);

        cout << endl;
    }

    file.close();
    return 0;
}

