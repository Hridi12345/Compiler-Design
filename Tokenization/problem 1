#include <iostream>
#include <fstream>
using namespace std;

int main() {
    string keywords[10] = {"int", "float", "if", "else", "while", "for", "return", "char", "double", "bool"};
    char operators[10] = {'+', '-', '*', '/', '=', '<', '>', '!', '&', '|'};
    char punctuations[8] = {',', ';', '{', '}', '(', ')', '[', ']'};

    ifstream file("tokens.txt");
    if (!file) {
        cout << "File not found." << endl;
        return 1;
    }

    file.clear();
    file.seekg(0);
    string line;
    cout << "Contents of tokens.txt:\n";
    while (getline(file, line)) {
        cout << line << endl;
    }

    file.clear();
    file.seekg(0);

    char ch, token[100];
    int i = 0;

    while (file.get(ch)) {
        int op = 0, punc = 0;

        for (int j = 0; j < 10; j++) {
            if (ch == operators[j]) {
                op = 1;
                break;
            }
        }

        for (int j = 0; j < 8; j++) {
            if (ch == punctuations[j]) {
                punc = 1;
                break;
            }
        }

        if (ch == ' ' || ch == '\t' || ch == '\n' || op || punc) {
            if (i > 0) {
                token[i] = '\0';

                int found = 0;
                for (int k = 0; k < 10; k++) {
                    int j = 0;
                    while (token[j] == keywords[k][j] && token[j] != '\0') j++;
                    if (token[j] == '\0' && keywords[k][j] == '\0') {
                        cout << "Keyword ";
                        found = 1;
                        break;
                    }
                }

                if (!found) {
                    int Num = 1, dotCount = 0;
                    for (int j = 0; token[j] != '\0'; j++) {
                        if (token[j] == '.') {
                            dotCount++;
                            if (dotCount > 1) {
                                Num = 0;
                                break;
                            }
                        } else if (token[j] < '0' || token[j] > '9') {
                            Num = 0;
                            break;
                        }
                    }

                    if (Num && token[0] != '\0') {
                        cout << "NumericConstant ";
                    } else {
                        int valid = 1;
                        if (!((token[0] >= 'A' && token[0] <= 'Z') ||
                              (token[0] >= 'a' && token[0] <= 'z') ||
                              token[0] == '_')) valid = 0;

                        for (int j = 1; token[j] != '\0' && valid == 1; j++) {
                            if (!((token[j] >= 'A' && token[j] <= 'Z') ||
                                  (token[j] >= 'a' && token[j] <= 'z') ||
                                  (token[j] >= '0' && token[j] <= '9') ||
                                  token[j] == '_')) {
                                valid = 0;
                                break;
                            }
                        }

                        if (valid == 1)
                            cout << "Identifier ";
                        else
                            cout << "Unknown ";
                    }
                }

                i = 0;
            }

            if (op)
                cout << "Operator ";
            else if (punc)
                cout << "Punctuation ";
            else if (ch == ' ' || ch == '\t')
                ;
            else if (ch == '\n')
                cout << endl;
        } else {
            token[i++] = ch;
        }
    }

    if (i > 0) {
        token[i] = '\0';

        int found = 0;
        for (int k = 0; k < 10; k++) {
            int j = 0;
            while (token[j] == keywords[k][j] && token[j] != '\0') j++;
            if (token[j] == '\0' && keywords[k][j] == '\0') {
                cout << "Keyword ";
                found = 1;
                break;
            }
        }

        if (!found) {
            int Num = 1, dotCount = 0;
            for (int j = 0; token[j] != '\0'; j++) {
                if (token[j] == '.') {
                    dotCount++;
                    if (dotCount > 1) {
                        Num = 0;
                        break;
                    }
                } else if (token[j] < '0' || token[j] > '9') {
                    Num = 0;
                    break;
                }
            }

            if (Num && token[0] != '\0') {
                cout << "NumericConstant ";
            } else {
                int valid = 1;
                if (!((token[0] >= 'A' && token[0] <= 'Z') ||
                      (token[0] >= 'a' && token[0] <= 'z') ||
                      token[0] == '_')) valid = 0;

                for (int j = 1; token[j] != '\0' && valid == 1; j++) {
                    if (!((token[j] >= 'A' && token[j] <= 'Z') ||
                          (token[j] >= 'a' && token[j] <= 'z') ||
                          (token[j] >= '0' && token[j] <= '9') ||
                          token[j] == '_')) {
                        valid = 0;
                        break;
                    }
                }

                if (valid == 1)
                    cout << "Identifier ";
                else
                    cout << "Unknown ";
            }
        }
    }

    cout << endl;
    file.close();
    return 0;
}
